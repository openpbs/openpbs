#!/bin/sh
# Copyright (C) 1994-2021 Altair Engineering, Inc.
# For more information, contact Altair at www.altair.com.
#
# This file is part of both the OpenPBS software ("OpenPBS")
# and the PBS Professional ("PBS Pro") software.
#
# Open Source License Information:
#
# OpenPBS is free software. You can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# OpenPBS is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Commercial License Information:
#
# PBS Pro is commercially licensed software that shares a common core with
# the OpenPBS software.  For a copy of the commercial license terms and
# conditions, go to: (http://www.pbspro.com/agreement.html) or contact the
# Altair Legal Department.
#
# Altair's dual-license business model allows companies, individuals, and
# organizations to create proprietary derivative works of OpenPBS and
# distribute them - whether embedded or bundled with other software -
# under a commercial license agreement.
#
# Use of Altair's trademarks, including but not limited to "PBS™",
# "OpenPBS®", "PBS Professional®", and "PBS Pro™" and Altair's logos is
# subject to Altair's trademark licensing policies.

. ${PBS_CONF_FILE:-/etc/pbs.conf}

is_systemd=1
_status=$(systemctl is-system-running 2>/dev/null)
if [ ! "${_status}" -o "x${_status}" = "xoffline" -o "x${_status}" = "xunknown" ] ; then
    is_systemd=0
fi
if [ $is_systemd -eq 1 ] ; then
    SYSTEMD_CGROUP=`grep ^cgroup /proc/mounts | grep systemd | head -1 | cut -d ' ' -f2`
    if [ ! -d $SYSTEMD_CGROUP/system.slice/pbs.service ] ; then
        mkdir -p $SYSTEMD_CGROUP/system.slice/pbs.service
    fi

    pstmstr_pid_found=0
    try=0
    while [ $try -lt 10 -a $pstmstr_pid_found -ne 1 ]
    do
        sleep 1
        if [ -f ${PBS_HOME}/datastore/postmaster.pid ] ; then
            pstmstr_pid_found=1
        fi
        try=`expr $try + 1`
    done

    if [ $pstmstr_pid_found -eq 1 ] ; then
        P_PID=`head -n 1 ${PBS_HOME}/datastore/postmaster.pid`
        if [ -n "$P_PID" ] ; then
            echo $P_PID >> $SYSTEMD_CGROUP/system.slice/pbs.service/tasks
            pidlist=`pgrep -P $P_PID`
            if [ -n "$pidlist" ] ; then
                for PID in $pidlist; do
                    echo $PID >> $SYSTEMD_CGROUP/system.slice/pbs.service/tasks
                done
            fi
        fi
    fi
fi
exit 0
